<?xml version="1.0" encoding="UTF-8"?>
<!--
    Phing (http://phing.info/) build file
    Docs: https://www.phing.info/docs/stable/hlhtml/index.html

    @author    Piotr Żuralski <piotr@zuralski.net>
    @copyright 2015 Blue Media
    @since     2015-08-08
    @version   2.3.3
-->
<project name="Płatności Online BM" default="build:dev">

    <property environment="env"/>
    <property name="project.src_dir" value="${project.basedir}/src" override="true"/>
    <property name="project.build_dir" value="${project.basedir}/builds" override="true"/>
    <property name="project.bin_dir" value="${project.basedir}/bin" override="true"/>
    <property name="composer:exists" value="0" override="true"/>
    <property name="composer:path" value="${project.bin_dir}/composer.phar" override="true"/>

    <!--<target name="build" depends="verify, analyze"/>-->
    <!--<target name="verify" depends="phplint,composer-validate,autoload-validation,author-validation"/>-->
    <!--<target name="analyze" depends="phploc,pdepend,phpmd,phpcs,phpcpd,phpunit,branch-alias-validation,travis-configuration-check"/>-->
    <!--<target name="docs" depends="phpdoc, phpcb, htaccess, copysvg, copybuild"/>-->

    <target name="qc" description="Quality check" depends="qc:lint,qc:pdepend,qc:phpmetrics,qc:codeception,qc:phpunit,qc:humbug,qc:sensio-security,qc:phpcb,qc:phpcpd,qc:php-cs-fixer,qc:phpcs,qc:phpcbf,qc:phpdcd,qc:phploc,qc:phpmd,qc:phpstan,qc:phpstan-verbose"/>

    <target name="initialize" hidden="true">
        <delete dir="${project.build_dir}"/>
        <mkdir dir="${project.build_dir}/logs/"/>
        <mkdir dir="${project.build_dir}/logs/phpmetrics/"/>
    </target>

    <target name="composer:get" hidden="true" depends="initialize">
        <exec command="command -v composer.phar" outputProperty="composer:path"/>

        <available file="${composer:path}" property="composer:exists" value="1"/>
        <if>
            <not><equals arg1="${composer:path}" arg2="1"/></not>
            <then>
                <property name="composer:path" value="${project.bin_dir}/composer.phar"/>
            </then>
        </if>

        <composer composer="${composer:path}" command="self-update"/>
        <composer composer="${composer:path}">
            <arg line="--version"/>
        </composer>
        <composer composer="${composer:path}" command="validate"/>
    </target>

    <target name="vendors:dev" hidden="true">
        <composer composer="${composer:path}" command="install">
            <arg value="--no-progress"/>
            <arg value="--no-interaction"/>
            <arg value="--no-suggest"/>
            <arg value="--prefer-source"/>
            <!--<arg value="-vvv"/>-->
        </composer>
        <composer composer="${composer:path}" command="dump-autoload">
            <arg value="--optimize"/>
        </composer>
    </target>

    <target name="vendors:prod" hidden="true">
        <composer composer="${composer:path}" command="install">
            <arg value="--no-dev"/>
            <arg value="--no-progress"/>
            <arg value="--no-interaction"/>
            <arg value="--no-suggest"/>
            <arg value="--prefer-dist"/>
        </composer>
        <composer composer="${composer:path}" command="dump-autoload">
            <arg value="--no-dev"/>
            <arg value="--optimize"/>
        </composer>
    </target>

    <target name="qc:lint" description="QC: Linting files">
        <phplint cachefile="${project.build_dir}/cache.properties" deprecatedAsError="true" haltonfailure="true">
            <fileset dir="${project.basedir}/examples">
                <include name="**/*.php"/>
            </fileset>
            <fileset dir="${project.src_dir}">
                <include name="**/*.php"/>
            </fileset>
            <fileset dir="${project.basedir}/tests">
                <include name="**/*.php"/>
            </fileset>
        </phplint>
    </target>

    <target name="qc:pdepend" description="QC: pDepend">
        <if>
            <available file="${project.bin_dir}/pdepend.phar" type="file" property="qc.pdepend.file"/>
            <then>
                <exec executable="${project.bin_dir}/pdepend.phar" checkreturn="true" logoutput="true">
                    <arg value="--jdepend-xml=${project.build_dir}/logs/jdepend.xml"/>
                    <arg value="--dependency-xml=${project.build_dir}/logs/dependency.xml"/>
                    <arg value="--summary-xml=${project.build_dir}/logs/pdepend-summary.xml"/>
                    <arg value="${project.src_dir}/,${project.basedir}/tests/"/>
                </exec>
            </then>
            <else>
                <echo message="Skipping qc:pdepend" level="warning"/>
            </else>
        </if>
    </target>

    <target name="qc:phpcb" description="QC: Code browser">
        <echo message="Skipping qc:phpcb" level="warning"/>
        <!--<exec executable="${project.bin_dir}/phpcb.phar" checkreturn="true" logoutput="true">-->
            <!--<arg value="&#45;&#45;log"/>-->
            <!--<arg path="${project.build_dir}/logs/"/>-->

            <!--<arg value="&#45;&#45;source"/>-->
            <!--<arg path="${project.src_dir}"/>-->

            <!--<arg value="&#45;&#45;output"/>-->
            <!--<arg path="${project.build_dir}/code-browser/"/>-->
        <!--</exec>-->
    </target>

    <target name="qc:phpcpd" description="QC: PHP Copy/Paste Detector">
        <exec executable="${project.bin_dir}/phpcpd.phar" checkreturn="true" logoutput="true">
            <arg value="--log-pmd"/>
            <arg path="${project.build_dir}/logs/pmd-cpd.xml"/>
            <arg path="${project.src_dir}"/>
        </exec>
    </target>

    <target name="qc:phpcs" description="QC: Code Sniffer">
        <exec executable="${project.bin_dir}/phpcs.phar" checkreturn="false" logoutput="true">
            <arg path="${project.src_dir}"/>
            <arg path="${project.basedir}/tests/"/>
            <arg value="--standard=${project.basedir}/phpcs.xml"/>
            <arg value="--extensions=php"/>
        </exec>
    </target>

    <target name="qc:phpcbf">
        <exec executable="${project.bin_dir}/phpcbf.phar" checkreturn="false" logoutput="true">
            <arg path="${project.src_dir}"/>
            <arg path="${project.basedir}/tests/"/>
            <arg value="--standard=${project.basedir}/phpcs.xml"/>
            <arg value="--extensions=php"/>
        </exec>
    </target>

    <target name="qc:php-cs-fixer" description="QC: Coding File fixer (dry-run)">
        <exec executable="${project.bin_dir}/php-cs-fixer.phar" checkreturn="true" logoutput="true">
            <arg value="fix"/>
            <arg path="${project.src_dir}"/>
            <arg value="--config"/>
            <arg path=".php_cs.dist"/>
            <arg value="--dry-run"/>
            <arg value="-vvv"/>
        </exec>
    </target>

    <target name="qc:phpdcd" description="QC: Dead Code Detector">
        <exec executable="${project.bin_dir}/phpdcd.phar" checkreturn="true" logoutput="true">
            <arg line="--no-interaction"/>

            <arg path="${project.src_dir}/"/>
            <arg path="${project.basedir}/tests/"/>
        </exec>
    </target>

    <target name="qc:phploc" description="QC: measure the size and analyzing the structure of a project">
        <exec executable="${project.bin_dir}/phploc.phar" checkreturn="true" logoutput="true">
            <arg value="--no-interaction"/>
            <arg value="--count-tests"/>
            <arg path="${project.basedir}/tests/"/>
            <arg path="--log-csv"/>
            <arg path="${project.build_dir}/logs/phploc.csv"/>
            <arg path="--log-xml"/>
            <arg path="${project.build_dir}/logs/phploc.xml"/>
        </exec>
    </target>


    <target name="qc:phpmd" description="QC: PHP Mess Detector">
        <!--<echo message="Skipping qc:phpmd" level="warning"/>-->
        <exec executable="${project.bin_dir}/phpmd" checkreturn="true" logoutput="true">
            <arg path="${project.src_dir}"/>
            <arg value="text"/>
            <arg value="codesize"/>
            <arg path="${project.build_dir}/logs/phpmd.xml"/>
        </exec>
    </target>

    <target name="qc:phpmetrics" description="QC: static analysis tool for PHP">
        <if>
            <available file="${project.basedir}/.phpmetrics.yml" type="file" property="qc.phpmetrics.file"/>
            <then>
                <exec executable="${project.bin_dir}/phpmetrics.phar" checkreturn="true" logoutput="true">
                    <arg value="--no-interaction"/>
                    <arg path="./src/"/>
                    <arg value="--report-html=${project.build_dir}/logs/phpmetrics/"/>
                    <arg value="--report-violations=${project.build_dir}/logs/phpmetrics-violations.xml"/>
                </exec>
            </then>
            <else>
                <echo message="Skipping qc:phpmetrics" level="warning"/>
            </else>
        </if>
    </target>

    <target name="qc:phpunit" description="QC: Runs unit tests in PHPUnit">
        <if>
            <available file="${project.basedir}/phpunit.xml" type="file" property="qc.phpunit.file"/>
            <then>
                <exec executable="${project.bin_dir}/phpunit.phar" checkreturn="true" logoutput="true">
                    <arg value="-c"/>
                    <arg value="phpunit.xml"/>
                </exec>
            </then>
            <else>
                <echo message="Skipping qc:phpunit" level="warning"/>
            </else>
        </if>
    </target>

    <target name="qc:humbug" description="QC: Runs Humbug - a Mutation Testing framework">
        <if>
            <available file="${project.basedir}/humbug.json" type="file" property="qc.humbug.file"/>
            <then>
                <exec executable="${project.bin_dir}/humbug.phar" checkreturn="true" logoutput="true">
                    <arg value="--no-progress-bar"/>
                    <arg value="--no-interaction"/>
                    <arg value="-vvv"/>
                </exec>
            </then>
            <else>
                <echo message="Skipping qc:humbug" level="warning"/>
            </else>
        </if>
    </target>

    <target name="qc:sensio-security" description="QC: Checks security issues with project dependencies">
        <exec executable="curl" checkreturn="true" logoutput="true">
            <arg line='-sS --insecure -H "Accept: text/plain" https://security.sensiolabs.org/check_lock -F lock=@composer.lock'/>
        </exec>
    </target>

    <target name="qc:codeception">
        <if>
            <available file="${project.basedir}/codeception.yml" type="file" property="qc.codeception.file"/>
            <then>
                <exec executable="${project.bin_dir}/codecept" checkreturn="true" logoutput="true">
                    <arg value="run"/>
                    <!--<arg value="&#45;&#45;report"/>-->
                    <arg value="--html=report.html"/>
                    <arg value="--coverage"/>
                    <!--<arg value="&#45;&#45;coverage-html"/>-->
                    <arg value="--coverage-text"/>
                    <arg value="--coverage-xml"/>
                    <arg value="--no-interaction"/>
                    <arg value="--no-ansi"/>
                    <arg value="-v"/>
                </exec>
            </then>
            <else>
                <echo message="Skipping qc:codeception" level="warning"/>
            </else>
        </if>
    </target>

    <target name="qc:phpstan">
        <exec executable="${project.bin_dir}/phpstan.phar" checkreturn="false" logoutput="true">
            <arg value="analyse"/>
            <arg path="${project.src_dir}"/>
            <arg value="--level=3"/>
            <arg value="--no-progress"/>
            <arg value="--no-ansi"/>
            <arg value="--no-interaction"/>
        </exec>
    </target>

    <target name="qc:phpstan-verbose">
        <exec executable="${project.bin_dir}/phpstan.phar" checkreturn="false" logoutput="true">
            <arg value="analyse"/>
            <arg path="${project.src_dir}"/>
            <arg value="--level=7"/>
            <arg value="--no-progress"/>
            <arg value="--no-ansi"/>
            <arg value="--no-interaction"/>
        </exec>
    </target>

    <target name="build:prod"  description="Builds application for &quot;prod&quot; (production) enviroment" depends="composer:get,vendors:prod"/>
    <target name="build:dev" description="Builds application for &quot;dev&quot; (development) enviroment" depends="composer:get,vendors:dev,qc"/>

    <target name="php-cs-fixer">
        <exec executable="${project.bin_dir}/php-cs-fixer.phar" checkreturn="true" logoutput="true">
            <arg value="fix"/>
            <arg path="${project.src_dir}"/>
            <arg path="./tests"/>
            <arg value="--config"/>
            <arg path=".php_cs.dist"/>
            <arg value="-vvv"/>
        </exec>
    </target>

</project>
